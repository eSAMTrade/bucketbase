[tool.poetry]
name = "bucketbase"
version = "1.4.2"  # do not edit manually. kept in sync with `tool.commitizen` config via automation
description = "bucketbase"
authors = ["Andrei Suiu <andrei.suiu@gmail.com>"]
repository = "https://github.com/asuiu/bucketbase"
readme = "README.py.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
requests = ">=2.25.1"
streamerate = ">=1.1.4"
pyxtension = ">=1.17.1"
StrEnum = ">=0.4.0"
filelock= ">3.0.12"
minio = { version = ">=7.2.4", optional = true }
multiminio = { version = ">=1.0.2", optional = true }

[tool.poetry.extras]
minio = ["minio", "multiminio"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
minio = "^7.2.15"
multiminio = "^1.0.2"
tsx = ">=0.1.16"
pyarrow = ">=21.0.0"
twine = ">=6.1.0"

[tool.black]
line-length = 160
include = '\.pyi?$'
default_language_version = '3.10'

[tool.pylint.master]
#ignore="tests,test_integrations"
ignore-patterns = ["test_.*"]
load-plugins = ["pylint.extensions.no_self_use"]

[tool.pylint.messages_control]
max-line-length = 160
disable = ["import-error",
    "missing-module-docstring",
    "missing-class-docstring",
    "invalid-name",
    "no-name-in-module",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "logging-fstring-interpolation"]
output-format = "colorized"
max-locals = 25
max-args = 10
enable = "useless-suppression"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]


# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

[tool.isort]
profile = "black"
known_first_party = ["bucketbase"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.2.3"  # do not edit manually. kept in sync with `tool.poetry` config via automation
tag_format = "v$version"

# Same as Black.
line-length = 160

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[build-system]
requires = ["poetry>=1.3"]
build-backend = "poetry.masonry.api"
